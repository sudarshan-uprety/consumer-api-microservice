"""deleting all existing tables

Revision ID: 415d534744ca
Revises: 640533a47559
Create Date: 2024-07-29 14:31:35.288426

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '415d534744ca'
down_revision: Union[str, None] = '640533a47559'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_user_orders_address', table_name='user_orders')
    op.drop_index('ix_user_orders_id', table_name='user_orders')
    op.drop_index('ix_user_orders_price', table_name='user_orders')
    op.drop_index('ix_user_orders_product', table_name='user_orders')
    op.drop_index('ix_user_orders_quantity', table_name='user_orders')
    op.drop_table('user_orders')
    op.drop_index('ix_user_payments_amount_paid', table_name='user_payments')
    op.drop_index('ix_user_payments_id', table_name='user_payments')
    op.drop_index('ix_user_payments_payment_id', table_name='user_payments')
    op.drop_index('ix_user_payments_payment_method', table_name='user_payments')
    op.drop_table('user_payments')
    op.drop_index('ix_used_tokens_id', table_name='used_tokens')
    op.drop_index('ix_used_tokens_token', table_name='used_tokens')
    op.drop_table('used_tokens')
    op.drop_table('users')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('email', sa.VARCHAR(length=225), autoincrement=False, nullable=False),
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('users_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('full_name', sa.VARCHAR(length=225), autoincrement=False, nullable=False),
    sa.Column('phone', sa.VARCHAR(length=15), autoincrement=False, nullable=False),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_deleted', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    sa.UniqueConstraint('phone', name='users_phone_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('used_tokens',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('used_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='used_tokens_pkey')
    )
    op.create_index('ix_used_tokens_token', 'used_tokens', ['token'], unique=True)
    op.create_index('ix_used_tokens_id', 'used_tokens', ['id'], unique=False)
    op.create_table('user_payments',
    sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_payments_id_seq'::regclass)"), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payment_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('payment_method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('amount_paid', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_payments_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_payments_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('ix_user_payments_payment_method', 'user_payments', ['payment_method'], unique=False)
    op.create_index('ix_user_payments_payment_id', 'user_payments', ['payment_id'], unique=True)
    op.create_index('ix_user_payments_id', 'user_payments', ['id'], unique=False)
    op.create_index('ix_user_payments_amount_paid', 'user_payments', ['amount_paid'], unique=False)
    op.create_table('user_orders',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('payment_id', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('product', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('quantity', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.Column('price', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_delivered', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['payment_id'], ['user_payments.id'], name='user_orders_payment_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='user_orders_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='user_orders_pkey')
    )
    op.create_index('ix_user_orders_quantity', 'user_orders', ['quantity'], unique=False)
    op.create_index('ix_user_orders_product', 'user_orders', ['product'], unique=False)
    op.create_index('ix_user_orders_price', 'user_orders', ['price'], unique=False)
    op.create_index('ix_user_orders_id', 'user_orders', ['id'], unique=False)
    op.create_index('ix_user_orders_address', 'user_orders', ['address'], unique=False)
    # ### end Alembic commands ###
