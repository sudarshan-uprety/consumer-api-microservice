version: '3'

services:
  authentication_database_dev:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${USER_POSTGRES_DB_NAME}
      POSTGRES_USER: ${USER_POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${USER_POSTGRES_DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - postgres_data_dev:/var/lib/postgresql/data

  authentication_service_dev:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - authentication_database_dev
    ports:
      - "9001:9000"
    environment:
      - env=dev
    container_name: micro_authentication_dev

  authentication_database_uat:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${USER_POSTGRES_DB_NAME}
      POSTGRES_USER: ${USER_POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${USER_POSTGRES_DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - postgres_data_uat:/var/lib/postgresql/data

  authentication_service_uat:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - authentication_database_uat
    ports:
      - "9002:9000"
    environment:
      - env=uat
    container_name: micro_authentication_uat

  authentication_database_prod:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_DB: ${USER_POSTGRES_DB_NAME}
      POSTGRES_USER: ${USER_POSTGRES_DB_USER}
      POSTGRES_PASSWORD: ${USER_POSTGRES_DB_PASSWORD}
    env_file:
      - .env
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data

  authentication_service_prod:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - authentication_database_prod
    ports:
      - "9000:9000"
    environment:
      - env=prod
    container_name: micro_authentication_prod

volumes:
  postgres_data_dev:
  postgres_data_uat:
  postgres_data_prod:
